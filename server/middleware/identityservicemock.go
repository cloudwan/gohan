// Code generated by MockGen. DO NOT EDIT.
// Source: server/middleware/middleware.go

// Package mock_middleware is a generated GoMock package.
package middleware

import (
	reflect "reflect"

	schema "github.com/cloudwan/gohan/schema"
	gomock "github.com/golang/mock/gomock"
	gophercloud "github.com/rackspace/gophercloud"
)

// MockIdentityService is a mock of IdentityService interface
type MockIdentityService struct {
	ctrl     *gomock.Controller
	recorder *MockIdentityServiceMockRecorder
}

// MockIdentityServiceMockRecorder is the mock recorder for MockIdentityService
type MockIdentityServiceMockRecorder struct {
	mock *MockIdentityService
}

// NewMockIdentityService creates a new mock instance
func NewMockIdentityService(ctrl *gomock.Controller) *MockIdentityService {
	mock := &MockIdentityService{ctrl: ctrl}
	mock.recorder = &MockIdentityServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIdentityService) EXPECT() *MockIdentityServiceMockRecorder {
	return m.recorder
}

// GetTenantID mocks base method
func (m *MockIdentityService) GetTenantID(arg0 string) (string, error) {
	ret := m.ctrl.Call(m, "GetTenantID", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTenantID indicates an expected call of GetTenantID
func (mr *MockIdentityServiceMockRecorder) GetTenantID(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTenantID", reflect.TypeOf((*MockIdentityService)(nil).GetTenantID), arg0)
}

// GetTenantName mocks base method
func (m *MockIdentityService) GetTenantName(arg0 string) (string, error) {
	ret := m.ctrl.Call(m, "GetTenantName", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTenantName indicates an expected call of GetTenantName
func (mr *MockIdentityServiceMockRecorder) GetTenantName(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTenantName", reflect.TypeOf((*MockIdentityService)(nil).GetTenantName), arg0)
}

// VerifyToken mocks base method
func (m *MockIdentityService) VerifyToken(arg0 string) (schema.Authorization, error) {
	ret := m.ctrl.Call(m, "VerifyToken", arg0)
	ret0, _ := ret[0].(schema.Authorization)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyToken indicates an expected call of VerifyToken
func (mr *MockIdentityServiceMockRecorder) VerifyToken(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyToken", reflect.TypeOf((*MockIdentityService)(nil).VerifyToken), arg0)
}

// GetServiceAuthorization mocks base method
func (m *MockIdentityService) GetServiceAuthorization() (schema.Authorization, error) {
	ret := m.ctrl.Call(m, "GetServiceAuthorization")
	ret0, _ := ret[0].(schema.Authorization)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetServiceAuthorization indicates an expected call of GetServiceAuthorization
func (mr *MockIdentityServiceMockRecorder) GetServiceAuthorization() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServiceAuthorization", reflect.TypeOf((*MockIdentityService)(nil).GetServiceAuthorization))
}

// GetClient mocks base method
func (m *MockIdentityService) GetClient() *gophercloud.ServiceClient {
	ret := m.ctrl.Call(m, "GetClient")
	ret0, _ := ret[0].(*gophercloud.ServiceClient)
	return ret0
}

// GetClient indicates an expected call of GetClient
func (mr *MockIdentityServiceMockRecorder) GetClient() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClient", reflect.TypeOf((*MockIdentityService)(nil).GetClient))
}

// MockNobodyResourceService is a mock of NobodyResourceService interface
type MockNobodyResourceService struct {
	ctrl     *gomock.Controller
	recorder *MockNobodyResourceServiceMockRecorder
}

// MockNobodyResourceServiceMockRecorder is the mock recorder for MockNobodyResourceService
type MockNobodyResourceServiceMockRecorder struct {
	mock *MockNobodyResourceService
}

// NewMockNobodyResourceService creates a new mock instance
func NewMockNobodyResourceService(ctrl *gomock.Controller) *MockNobodyResourceService {
	mock := &MockNobodyResourceService{ctrl: ctrl}
	mock.recorder = &MockNobodyResourceServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNobodyResourceService) EXPECT() *MockNobodyResourceServiceMockRecorder {
	return m.recorder
}

// VerifyResourcePath mocks base method
func (m *MockNobodyResourceService) VerifyResourcePath(arg0 string) bool {
	ret := m.ctrl.Call(m, "VerifyResourcePath", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// VerifyResourcePath indicates an expected call of VerifyResourcePath
func (mr *MockNobodyResourceServiceMockRecorder) VerifyResourcePath(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyResourcePath", reflect.TypeOf((*MockNobodyResourceService)(nil).VerifyResourcePath), arg0)
}
