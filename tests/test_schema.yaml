extensions:
- code: |
    gohan_register_handler("verify_request_data_in_context", function(context){
      if (context.request_data === undefined) {
        throw new ValidationException("no request_data in context");
      }
      if (context.request_data.hello === undefined) {
        throw new ValidationException("no 'hello' in request_data");
      }
      context.response = {"ok": true};
    });
- code: |
    gohan_register_handler("pre_create", function(context){
      if (context.resource.name === "run-pre-create") {
        context.resource = JSON.parse(JSON.stringify(context.resource)); // imitiate copying context in go-ext
        context.resource.name = "set-in-pre-create";
      }
    });
    gohan_register_handler("pre_update_in_transaction", function(context){
      if (context.request_data === undefined) {
        throw new ValidationException("no request_data in context");
      }
    });
    gohan_register_handler("pre_create_in_transaction", function(context){
      if (context.request_data === undefined) {
        throw new ValidationException("no request_data in context");
      }
    });
    gohan_register_handler("pre_delete_in_transaction", function(context) {
      if (context.request_data === null) {
        throw new ValidationException("expected to not have request_data in context");
      }
    });
    gohan_register_handler("pre_show_in_transaction", function(context) {
      if (context.request_data === null) {
        throw new ValidationException("expected to not have request_data in context");
      }
    });
  id: test_request_data_crud
  path: /v2.0/*
- code: |
    gohan_register_handler("pre_create_in_transaction", function (context){
        context.response_code = 390
        context.response = "Dummy error."
    });
  event: list
  id: test
  path: /v2.0/test.*
- code: |
    gohan_register_handler("hello", function (context) {
        context.response = {"output": "Hello, " + context.input.name + "!"};
    });
  id: test
  path: /v2.0/responder
- code: |
    gohan_register_handler("hi", function (context) {
        context.response = ["Hi", context.input.name, "!"];
    });
  id: test
  path: /v2.0/responder
- code: |
    gohan_register_handler("dobranoc", function (context) {
        context.response = "Dobranoc!";
    });
  id: test
  path: /v2.0/responder
- code: |
    gohan_register_handler("test_throw", function (context) {
        function ValidationException(msg) {
            CustomException.call(this, msg, 499);
            this.name = "ValidationException";
        }
        ValidationException.prototype = Object.create(CustomException.prototype);

        throw new ValidationException("tested exception");
    });
  id: test
  path: /v2.0/responder
- code: |
    gohan_register_handler("test_throw", function (context) {
        function ValidationException(msg) {
            CustomException.call(this, msg, 499);
            this.name = "ValidationException";
        }
        ValidationException.prototype = Object.create(CustomException.prototype);

        throw new ValidationException("tested exception");
    });
  id: test
  path: /v2.0/responder
- code: |
    gohan_register_handler("denied_action", function (context) {
        throw "Should not occured";
    });
  id: test
  path: /v2.0/responder


networks: []

policies:
- action: '*'
  effect: allow
  id: admin_statement
  principal: admin
  resource:
    path: .*
- action: verify_request_data_in_context
  effect: allow
  id: member_verify_request_data_in_context
  principal: Member
  resource:
    path: /v2.0/responder.*
- action: hello
  effect: allow
  id: member_hello
  principal: Member
  resource:
    path: /v2.0/responder.*
- action: dobranoc
  effect: allow
  id: member_dobranoc
  principal: Member
  resource:
    path: /v2.0/responder.*
- action: test_throw
  effect: allow
  id: member_test_throw
  principal: Member
  resource:
    path: /v2.0/responder.*
- action: test_throw
  effect: allow
  id: member_test_throw
  principal: Member
  resource:
    path: /v2.0/responder.*
- action: '*'
  condition:
  - is_owner
  - action: '*'
    tenant_id: fc394f2ab2df4114bde39905f800dc57
    type: belongs_to
  effect: allow
  id: power_user_statement
  principal: Member
  resource:
    path: /v2.0/network.*
  tenant_id: acf5662bbff44060b93a.*
- action: '*'
  effect: allow
  id: member_user_schemas
  principal: Member
  resource:
    path: /v0.1/schema.*
- action: '*'
  condition:
  - is_owner
  - action: read
    tenant_id: acf5662bbff44060b93ac3db3c25a590
    type: belongs_to
  - action: update
    tenant_id: acf5662bbff44060b93ac3db3c25a590
    type: belongs_to
  effect: allow
  id: member_statement
  principal: Member
  resource:
    path: /v2.0/networks/[^/]+/?$
    properties:
    - id
    - description
    - name
    - tenant_id
- action: '*'
  condition:
  - is_owner
  - action: read
    tenant_id: acf5662bbff44060b93ac3db3c25a590
    type: belongs_to
  effect: allow
  id: member_statement2
  principal: Member
  resource:
    path: /v2.0/networks/?$
    properties:
    - id
    - description
    - name
    - tenant_id
- action: '*'
  condition:
  - is_owner
  effect: allow
  id: member_statement_test
  principal: Member
  resource:
    path: /v2.0/test.*
- action: '*'
  condition:
  - is_domain_owner
  effect: allow
  id: member_statement_domain_owner_test
  principal: Member
  resource:
    path: /v2.0/domain_owner_test.*
- action: '*'
  condition:
  - is_owner
  effect: allow
  id: member_statement_test
  principal: Member
  condition:
  - type: property
    action: read
    match:
      status:
      - ACTIVE
      - ERROR
  - type: property
    action: create
    match:
      status: ACTIVE
  - type: property
    action: update
    match:
      status: ACTIVE
  - type: property
    action: delete
    match:
      status: ACTIVE
  resource:
    path: /v2.0/server.*
- action: create
  effect: allow
  id: member_filter_test_create
  principal: Member
  resource:
    path: /v2.0/filter_test.*
- action: update
  effect: allow
  id: member_filter_test_update
  principal: Member
  condition:
    - and:
      - is_owner
      - match:
          property: state
          type: neq
          value: INVALID
  resource:
    path: /v2.0/filter_test.*
- action: delete
  effect: allow
  id: member_filter_test_delete
  principal: Member
  condition:
    - and:
      - is_owner
      - match:
          property: state
          type: neq
          value: INVALID
  resource:
    path: /v2.0/filter_test.*
- action: read
  effect: allow
  id: member_filter_test_read
  principal: Member
  condition:
    - or:
      - and:
        - match:
            property: state
            type: eq
            value: UP
        - match:
            property: level
            type: eq
            value:
              - 2
              - 3
      - is_owner
  resource:
    path: /v2.0/filter_test.*
    properties:
      - id
      - state
      - level
- action: '*'
  effect: allow
  id: actions_in_different_tenant_complex_condition_test_all_admin
  principal: admin
  resource:
    path: /v2.0/actions_in_different_tenant_test.*
- action: '*'
  effect: allow
  id: actions_in_different_tenant_complex_condition_test_all_member
  principal: Member
  resource:
    path: /v2.0/actions_in_different_tenant_test.*
    blacklistProperties:
    - dummy
  condition:
  - and:
    - is_owner
    - match:
        property: dummy
        type: eq
        value: false
- action: create
  id: visible_properties_test_create
  principal: admin
  resource:
    path: /v2.0/visible_properties_test.*
- action: create
  effect: allow
  id: visible_properties_create
  principal: Visible
  resource:
    path: /v2.0/visible_properties_test.*
    properties:
    - id
    - a
- action: update
  effect: allow
  id: visible_properties_update
  principal: Visible
  resource:
    path: /v2.0/visible_properties_test.*
    properties:
    - id
    - a
- action: read
  effect: allow
  id: visible_properties_read
  principal: Visible
  condition:
  - type: property
    match:
      is_public:
      - true
  resource:
    path: /v2.0/visible_properties_test.*
    properties:
    - a
- action: create
  effect: allow
  id: hidden_properties_create
  principal: Hidden
  resource:
    path: /v2.0/visible_properties_test.*
    blacklistProperties:
    - a
    - is_public
- action: update
  effect: allow
  id: hidden_properties_update
  principal: Hidden
  resource:
    path: /v2.0/visible_properties_test.*
    blacklistProperties:
    - a
    - is_public
- action: read
  effect: allow
  id: hidden_properties_read
  principal: Hidden
  condition:
  - type: property
    match:
      is_public:
      - true
  resource:
    path: /v2.0/visible_properties_test.*
    blacklistProperties:
    - id
    - a
    - is_public
- action: '*'
  condition:
  - is_owner
  effect: allow
  id: member_statement3
  principal: Member
  resource:
    path: /v2.0/subnet.*
- action: '*'
  condition:
  - is_owner
  effect: allow
  id: member_statement3
  principal: Member
  resource:
    path: /_all.*
- action: denied_action
  effect: deny
  id: admin_deny
  principal: admin
  resource:
    path: /v2.0/responder.*
- action: '*'
  condition:
  - is_owner
  effect: allow
  id: allow_attacher
  principal: Member
  resource:
    path: /v2.0/attacher.*
- action: '*'
  condition:
  - is_owner
  effect: allow
  id: allow_wildcard_attacher
  principal: Member
  resource:
    path: /v2.0/wildcard_attacher.*
- action: '*'
  condition:
  - is_owner
  effect: allow
  id: allow_nested_attacher
  principal: Member
  resource:
    path: /v2.0/nested_attacher.*
- action: '*'
  condition:
  - is_owner
  effect: allow
  id: allow_attach_target
  principal: Member
  resource:
    path: /v2.0/attach_target.*
- action: '__attach__'
  id: attach_if_accessible
  effect: allow
  principal: Member
  relation_property: attach_if_accessible_id
  target_condition:
  - or:
    - is_owner
    - match:
        property: accessibility
        type: eq
        value: everybody
  resource:
    path: /v2.0/attacher.*
- action: '__attach__'
  id: attach_if_same_owner
  effect: allow
  principal: Member
  relation_property: attach_if_same_owner_id
  target_condition:
  - is_owner
  resource:
    path: /v2.0/attacher.*
- action: '__attach__'
  id: deny_if_blocked
  effect: deny
  principal: Member
  relation_property: attach_if_accessible_id
  target_condition:
  - and:
    - is_owner
    - match:
        property: block_flag
        type: eq
        value: true
  resource:
    path: /v2.0/attacher.*
- action: '__attach__'
  id: wildcard
  effect: allow
  principal: Member
  relation_property: "*"
  target_condition:
  - is_owner
  resource:
    path: /v2.0/wildcard_attacher.*
- action: '__attach__'
  id: nested_attachment_object
  effect: allow
  principal: Member
  relation_property: container_object.attach_object_id
  target_condition:
  - is_owner
  resource:
    path: /v2.0/nested_attacher.*
- action: '__attach__'
  id: nested_attachment_array
  effect: allow
  principal: Member
  relation_property: container_array.[].attach_array_id
  target_condition:
  - is_owner
  resource:
    path: /v2.0/nested_attacher.*

schemas:
- description: Network
  id: network
  extends:
  - base
  isolation_level:
    read: REPEATABLE READ
    update: SERIALIZABLE
  plural: networks
  schema:
    properties:
      providor_networks:
        description: Providor networks
        default: {}
        permission:
        - create
        - update
        properties:
          segmentation_type:
            enum:
            - vlan
            - vxlan
            - gre
            type: string
          segmentation_id:
            minimum: 0
            type: integer
        title: Provider Networks
        type: object
        unique: false
      route_targets:
        description: Route targets
        default: []
        items:
          type: string
        permission:
        - create
        - update
        title: RouteTargets
        type: array
        unique: false
      shared:
        description: Shared
        permission:
        - create
        - update
        title: Shared
        type: boolean
        unique: false
        default: false
      config:
        permission:
          - create
          - update
        description: Config
        title: Config
        type: object
        properties:
          default_vlan:
            description: Default VLAN
            title: Default VLAN
            type: object
            properties:
              name:
                type: string
                default: "default_vlan"
                title: Name
                description: Name
              vlan_id:
                type: integer
                default: 1
                title: VlanID
                description: Vlan ID
          vpn_vlan:
            description: VPN VLAN
            title: VPN VLAN
            type: object
            default:
              name: "vpn_vlan"
            properties:
              name:
                type: string
                title: Name
                description: Name
              vlan_id:
                type: integer
                title: VlanID
                description: Vlan ID
          user_vlan:
            description: User VLAN
            title: User VLAN
            type: object
            properties:
              name:
                type: string
                title: Name
                description: Name
              vlan_id:
                type: integer
                title: VlanID
                description: Vlan ID
          empty_vlan:
            description: Empty VLAN
            title: Empty VLAN
            type: object
            default: {}
            properties:
              name:
                type: string
                title: Name
                description: Name
              vlan_id:
                type: integer
                title: VlanID
                description: Vlan ID
    propertiesOrder:
    - providor_networks
    - route_targets
    - shared
    - config
    type: object
  singular: network
  title: Network
- description: Subnet
  id: subnet
  parent: network
  plural: subnets
  on_parent_delete_cascade: false
  extends:
  - base
  schema:
    properties:
      name:
        description: Name
        default: ""
        permission:
        - create
        - update
        title: Name
        type:
        - string
        - "null"
        unique: false
      cidr:
        description: CIDR
        permission:
        - create
        title: Cidr
        type: string
        unique: false
    propertiesOrder:
    - cidr
    type: object
    required:
    - cidr
  singular: subnet
  title: subnet
- id: server
  extends:
  - base
  plural: servers
  description: server
  schema:
    properties:
      network_id:
        permission:
        - create
        - update
        relation: network
        relation_property: network
        on_delete_cascade: true
        title: network id
        type: string
        unique: false
        description: Network ID
      status:
        permission: ["create", "update"]
        title: Status
        type: string
        unique: false
        description: status
    propertiesOrder:
    - network_id
    - status
    type: object
  singular: server
  title: Server
- description: Test
  id: test
  metadata:
    state_versioning: true
  plural: tests
  prefix: /v2.0
  schema:
    indexes:
      test_unique_id_and_tenant_id_and_domain_id:
        columns:
        - id
        - tenant_id
        - domain_id
        type: "unique"
    properties:
      id:
        description: ID
        permission:
        - create
        title: ID
        type: string
        unique: true
      tenant_id:
        description: Tenant ID
        permission:
        - create
        title: TenantID
        type: string
        unique: false
        indexed: true
      domain_id:
        description: Domain ID
        permission:
        - create
        title: DomainID
        type: string
        unique: false
        indexed: true
      test_string:
        default: ""
        description: Test string
        permission:
        - create
        - update
        title: Test string
        type:
        - string
        - "null"
        unique: false
        maxLength: 40
      test_number:
        default: 0.5
        description: Test number
        permission:
        - create
        - update
        title: Test number
        type:
        - number
        - "null"
        unique: false
      test_integer:
        default: 0
        description: Test integer
        permission:
        - create
        - update
        title: Test integer
        type:
        - integer
        - "null"
        unique: false
      test_bool:
        default: false
        description: Test boolean
        permission:
        - create
        - update
        title: Test boolean
        type:
        - boolean
        - "null"
        unique: false
    propertiesOrder:
    - id
    - tenant_id
    - domain_id
    type: object
  singular: test
  title: Test
- description: is_domain_owner test
  id: domain_owner_test
  metadata:
    state_versioning: true
  plural: domain_owner_tests
  prefix: /v2.0
  schema:
    indexes:
      domain_owner_test_unique_id_and_tenant_id_and_domain_id:
        columns:
        - id
        - tenant_id
        - domain_id
        type: "unique"
    properties:
      id:
        description: ID
        permission:
        - create
        title: ID
        type: string
        unique: true
      tenant_id:
        description: Tenant ID
        permission:
        - create
        title: TenantID
        type: string
        unique: false
        indexed: true
      domain_id:
        description: Domain ID
        permission:
        - create
        title: DomainID
        type: string
        unique: false
        indexed: true
      test_string:
        default: ""
        description: Test string
        permission:
        - create
        - update
        title: Test string
        type:
        - string
        - "null"
        unique: false
        maxLength: 40
      test_number:
        default: 0.5
        description: Test number
        permission:
        - create
        - update
        title: Test number
        type:
        - number
        - "null"
        unique: false
      test_integer:
        default: 0
        description: Test integer
        permission:
        - create
        - update
        title: Test integer
        type:
        - integer
        - "null"
        unique: false
      test_bool:
        default: false
        description: Test boolean
        permission:
        - create
        - update
        title: Test boolean
        type:
        - boolean
        - "null"
        unique: false
    propertiesOrder:
    - id
    - tenant_id
    - domain_id
    type: object
  singular: domain_owner_test
  title: is_domain_owner test
- description: Nil Test
  id: nil_test
  plural: Nil Tests
  extends:
  - base
  schema:
    properties:
      test_string:
        description: Test string
        permission:
        - create
        - update
        title: Test string
        default: "TestString"
        type:
        - string
        - "null"
        unique: false
      nested_obj:
        description: Nested obj
        permission:
        - create
        - update
        title: Nested obj
        type:
        - object
        - "null"
        properties:
           nested_string:
              description: Nested string
              permission:
              - create
              - update
              title: Nested string
              type:
              - string
              - "null"
              unique: false
    type: object
  singular: nil_test
  title: Nil Test
- description: Admin only
  id: admin_only
  plural: admin_onlys
  prefix: /v2.0
  schema:
    properties:
      id:
        description: ID
        permission:
        - create
        title: ID
        type: string
        unique: true
    propertiesOrder:
    - id
    type: object
  singular: admin_only
  title: Admin Only
- description: Responder
  parent: responder_parent
  id: responder
  plural: responders
  prefix: /v2.0
  schema:
    properties:
      id:
        description: ID
        permission:
        - create
        title: ID
        type: string
        unique: true
      pattern:
        description: Pattern
        permission:
        - create
        - update
        title: Responder
        type: string
      tenant_id:
        description: Tenant ID
        permission:
        - create
        title: TenantID
        type: string
        unique: false
    propertiesOrder:
    - id
    - pattern
    - tenant_id
    type: object
  singular: reponder
  title: Responder
  actions:
    verify_request_data_in_context:
      method: POST
      path: /:id/verify_request_data_in_context
      input:
        type: object
      output:
        type: object
    hello:
      method: POST
      path: /:id/hello
      input:
        properties:
          name:
            type: string
        required: [name]
        additionalProperties: false
        type: object
      output:
        type: string
    hi:
      method: POST
      path: /:id/hi
      input:
        properties:
          name:
            type: string
        type: object
      output:
        type: string
    dobranoc:
      method: GET
      path: /:id/dobranoc
      output:
        type: string
    test_throw:
      method: GET
      path: /:id/test_throw
      output:
        type: string
    test_throw:
      method: GET
      path: /:id/test_throw
      output:
        type: string
    denied_action:
      method: GET
      path: /:id/denied_action
      output:
        type: string
- description: ResponderParent
  id: responder_parent
  singular: reponder_parent
  plural: responder_parents
  prefix: /v2.0
  schema:
    properties:
      id:
        description: ID
        permission:
        - create
        title: ID
        type: string
        unique: true
    propertiesOrder:
    - id
    type: object
  title: Responder Parent
- description: Test Filter
  id: filter_test
  singular: filter_test
  plural: filter_tests
  prefix: /v2.0
  schema:
    properties:
      id:
        description: ID
        permission:
        - create
        title: ID
        type: string
        unique: true
      tenant_id:
        description: Tenant ID
        permission:
        - create
        title: TenantID
        type: string
        unique: false
      state:
        permission: ["create", "update"]
        title: State
        type: string
        unique: false
        description: state
      level:
        permission: ["create", "update"]
        title: Level
        type: integer
        unique: false
        description: level
    propertiesOrder:
    - id
    - tenant_id
    - state
    - level
    type: object
  title: Test Filter
- description: Test Actions In Different Tenant
  id: actions_in_different_tenant_test
  singular: actions_in_different_tenant_test
  plural: actions_in_different_tenant_tests
  prefix: /v2.0
  schema:
    properties:
      id:
        description: ID
        permission:
          - create
        title: ID
        type: string
        unique: true
      tenant_id:
        description: Tenant ID
        permission:
        - create
        title: TenantID
        type: string
        unique: false
      field:
        description: Dummy
        permission:
        - create
        - update
        title: Dummy
        type: string
        unique: false
      dummy:
        description: Dummy
        permission:
        - create
        title: Dummy
        type: boolean
        unique: false
        default: false
    propertiesOrder:
    - id
    - tenant_id
    - field
    - dummy
    type: object
  title: Test Actions In Different Tenant
- description: Test Visible Properties
  id: visible_properties_test
  singular: visible_properties_test
  plural: visible_properties_tests
  prefix: /v2.0
  schema:
    properties:
      id:
        description: ID
        permission:
        - create
        title: ID
        type: string
        unique: true
      a:
        description: A
        permission:
        - create
        - update
        title: A
        type: string
      b:
        description: B
        permission:
        - create
        - update
        title: A
        type: string
      is_public:
        description: Is Public
        permission:
        - create
        title: Is Public
        type: boolean
        default: true
    propertiesOrder:
    - id
    - a
    - b
    type: object
  title: Test Visible Properties
- description: Resource that attaches to "attach_target"
  id: attacher
  singular: attacher
  plural: attachers
  prefix: /v2.0
  schema:
    properties:
      id:
        description: ID
        permission:
        - create
        title: ID
        type: string
        unique: true
      attach_if_accessible_id:
        permission:
        - create
        - update
        relation: attach_target
        relation_property: attach_if_accessible
        title: Attach target ID
        type:
        - string
        - "null"
        unique: false
        description: A property that can attach to 'attach_target' iff it is accessible
      attach_if_same_owner_id:
        permission:
        - create
        - update
        relation: attach_target
        relation_property: attach_if_same_owner
        title: Other attach target ID
        type:
        - string
        - "null"
        unique: false
        description: A property that can attach to 'attach_target' iff it has the same owner
      not_a_relation:
        permission:
        - create
        - update
        type: integer
        title: Not a relation
        unique: false
        description: A property that is not a relation
      tenant_id:
        description: Tenant ID
        permission:
        - create
        title: TenantID
        type: string
        unique: false
  title: Attacher
- description: Resource that attaches to "attach_target", and has attachments regulated via a wildcard policy
  id: wildcard_attacher
  singular: wildcard_attacher
  plural: wildcard_attachers
  prefix: /v2.0
  schema:
    properties:
      id:
        description: ID
        permission:
        - create
        title: ID
        type: string
        unique: true
      attach_a_id:
        permission:
        - create
        - update
        relation: attach_target
        relation_property: attach_a
        title: Attach target ID
        type:
        - string
        - "null"
        unique: false
        description: Attach point
      attach_b_id:
        permission:
        - create
        - update
        relation: attach_target
        relation_property: attach_b
        title: Attach target ID
        type:
        - string
        - "null"
        unique: false
        description: Attach point
      container_object:
        description: Container object for attacher
        permission:
        - create
        - update
        title: Container object
        type: object
        properties:
          attach_object_id:
            title: Attach target ID
            relation: attach_target
            relation_property: attach_object
            type: string
      container_array:
        description: Container array for attacher
        permission:
        - create
        - update
        title: Container array
        type: array
        items:
          type: object
          properties:
            attach_array_id:
              title: Attach target ID
              relation: attach_target
              relation_property: attach_array
              type: string
      tenant_id:
        description: Tenant ID
        permission:
        - create
        title: TenantID
        type: string
        unique: false
  title: Wildcard attacher
- description: Resource that has a nested properties with attach policies defined for them
  id: nested_attacher
  singular: nested_attacher
  plural: nested_attachers
  prefix: /v2.0
  schema:
    properties:
      id:
        description: ID
        permission:
        - create
        title: ID
        type: string
        unique: true
      container_object:
        description: Container object for attacher
        permission:
        - create
        - update
        title: Container object
        type: object
        properties:
          attach_object_id:
            title: Attach through object
            relation: attach_target
            relation_property: attach_object
            type: string
      container_array:
        description: Container array for attacher
        permission:
        - create
        - update
        title: Container array
        type: array
        items:
          type: object
          properties:
            attach_array_id:
              title: Attach through array
              relation: attach_target
              relation_property: attach_array
              type: string
  title: Nested attacher
- description: Target of attach
  id: attach_target
  singular: attach_target
  plural: attach_targets
  prefix: /v2.0
  schema:
    properties:
      id:
        description: ID
        permission:
        - create
        title: ID
        type: string
        unique: true
      tenant_id:
        description: Tenant ID
        permission:
        - create
        title: TenantID
        type: string
        unique: false
      accessibility:
        description: Who can access this resource
        permission:
        - create
        - update
        type: string
        enum:
        - owner_only
        - everybody
        title: Accessibility
      block_flag:
        description: Attachment block flag
        permission:
        - create
        - update
        type: boolean
        title: Block flag
    required:
      - accessibility
      - block_flag
  title: Target of attach

subnets: []
