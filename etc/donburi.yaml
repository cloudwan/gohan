#######################################################
#  Gohan API Server example configuraion
######################################################

# database connection configuraion
database:
    # yaml, json, sqlite3 and mysql supported
    # yaml and json db is for schema development purpose
    type: "sqlite3"
    # connection string
    # it is file path for yaml, json and sqlite3 backend
    connection: "./test.db"
# schema path
schemas:
    - "./schema/gohan.json"
    - "./extensions/gohan_extension.yaml"
    - "./extensions/donburi.yaml"
    - "./apps/donburi.yaml"

# listen address for gohan
address: ":9091"
tls:
    # browsers need to add exception as long as we use self-signed certificates
    # so lets leave it disabled for now
    enabled: false
    key_file: ./key.pem
    cert_file: ./cert.pem
# document root of gohan API server
# Note: only static and schema directoriy will be served
document_root: "."
# list of etcd backend servers
etcd:
    - "http://127.0.0.1:4001"
# enable AMQP
amqp:
    connection: amqp://guest:guest@172.16.25.130:5672/
    queues:
      - notifications.info
      - notifications.error
    events:
      - orchestration.stack

# keystone configuraion
keystone:
    use_keystone: true
    fake: false
    auth_url: "http://172.16.25.130:5000/v3"
    user_name: "admin"
    tenant_name: "admin"
    password: "secret123"
    version: v3
# CORS (Cross-origin resource sharing (CORS)) configuraion for javascript based client
cors: "*"

cron:
    - path: cron://cron_job_sample
      timing: "*/5 * * * * *"

# allowed levels  "CRITICAL", "ERROR", "WARNING", "NOTICE", "INFO", "DEBUG",
logging:
    stderr:
        enabled: true
        level: INFO
    file:
        enabled: true
        level: INFO
        filename: ./gohan.log
